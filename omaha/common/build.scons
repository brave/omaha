# Copyright 2009-2010 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

Import('env')

def BuildCommonLib(env):
  local_env = env.Clone()

  local_env['CPPPATH'] += [
      '$OBJ_ROOT',  # Needed for generated files.
      ]

  inputs = [
      'app_registry_utils.cc',
      'brave_stats_updater.cc',
      'command_line.cc',
      'command_line_builder.cc',
      'config_manager.cc',
      'crash_utils.cc',
      'event_logger.cc',
      'experiment_labels.cc',
      'exception_handler.cc',
      'extra_args_parser.cc',
      'google_signaturevalidator.cc',
      'goopdate_command_line_validator.cc',
      'goopdate_utils.cc',
      'lang.cc',
      'oem_install_utils.cc',
      'ping.cc',
      'ping_event.cc',
      'ping_event_download_metrics.cc',
      'scheduled_task_utils.cc',
      'stats_uploader.cc',
      'update3_utils.cc',
      'update_request.cc',
      'update_response.cc',
      'webplugin_utils.cc',
      'web_services_client.cc',
      'xml_const.cc',
      'xml_parser.cc',
      local_env.GetMultiarchLibName('logging'),       # Required by statsreport below
      local_env.GetMultiarchLibName('omaha3_idl'),    # Required by common
      local_env.GetMultiarchLibName('statsreport'),   # Required by common
      ]

  lib_name = 'common%s' % ('', '_64')[local_env.Bit('x64')]

  # Build these into a library.
  local_env.ComponentStaticLibrary(lib_name, inputs)

BuildCommonLib(env)
BuildCommonLib(env.CloneAndMake64Bit())
